     1                                 %line 1+1 hex.asm
     2                                 [bits 32]
     3                                 
     4                                 [org 0x08048000]
     5                                 
     6                                 ehdr:
     7 00000000 7F454C4601010100        db 0x7F, "ELF", 1, 1, 1, 0
     8 00000008 00<rept>                times 8 db 0
     9 00000010 0200                    dw 2
    10 00000012 0300                    dw 3
    11 00000014 01000000                dd 1
    12 00000018 54800408                dd _start
    13 0000001C 34000000                dd phdr - $$
    14 00000020 00000000                dd 0
    15 00000024 00000000                dd 0
    16 00000028 3400                    dw ehdrsize
    17 0000002A 2000                    dw phdrsize
    18 0000002C 0100                    dw 1
    19 0000002E 0000                    dw 0
    20 00000030 0000                    dw 0
    21 00000032 0000                    dw 0
    22                                 ehdrsize equ $ - ehdr
    23                                 
    24                                 phdr:
    25 00000034 01000000                dd 1
    26 00000038 00000000                dd 0
    27 0000003C 00800408                dd $$
    28 00000040 00800408                dd $$
    29 00000044 54000000                dd filesize
    30 00000048 54000000                dd filesize
    31 0000004C 05000000                dd 5
    32 00000050 00100000                dd 0x1000
    33                                 phdrsize equ $ - phdr
    34                                 
    35                                 filesize equ $ - $$
    36                                 
    37                                 _start:
    38 00000054 E81E000000              call gethex
    39 00000059 C1E004                  sal eax, 4
    40 0000005C 50                      push eax
    41 0000005D E815000000              call gethex
    42 00000062 010424                  add [esp], eax
    43 00000065 E8FCFFFFFF              call putchar
    44 0000006A 58                      pop eax
    45                                 
    46                                 putchar:
    47 0000006B 31DB                    xor ebx, ebx
    48 0000006D 43                      inc ebx
    49 0000006E 8D4C2404                lea ecx, [esp+4]
    50 00000072 89DA                    mov edx, ebx
    51 00000074 B804000000              mov eax, 4
    52 00000079 CD80                    int 0x80
    53 0000007B C3                      ret
    54                                 
    55                                 gethex:
    56 0000007C E81A000000              call getchar
    57 00000081 83F823                  cmp eax, 35
    58 00000084 750A                    jne .convhex
    59                                 
    60                                 .loop:
    61 00000086 E810000000              call getchar
    62 0000008B 83F80A                  cmp eax, 10
    63 0000008E 75F4                    jne .loop
    64 00000090 EBE8                    jmp gethex
    65                                 
    66                                 .convhex:
    67 00000092 83E830                  sub eax, 48
    68 00000095 7CE3                    jl gethex
    69 00000097 83F830                  cmp eax, 48
    70 0000009A 7C01                    jl .ret
    71 0000009C 83E827                  sub eax, 39
    72                                 
    73                                 .ret:
    74 0000009F C3                      ret
    75                                 
    76                                 getchar:
    77 000000A0 6A00                    push 0
    78 000000A2 31DB                    xor ebx, ebx
    79 000000A4 89E1                    mov ecx, esp
    80 000000A6 89DA                    mov edx, ebx
    81 000000A8 42                      inc edx
    82 000000A9 B803000000              mov eax, 3
    83 000000AE CD80                    int 0x80
    84 000000B0 85C0                    test eax, eax
    85 000000B2 7400                    je exit
    86 000000B4 58                      pop eax
    87 000000B5 C3                      ret
    88                                 
    89                                 exit:
    90 000000B6 31C0                    xor eax, eax
    91 000000B8 89C3                    mov ebx, eax
    92 000000BA 40                      inc eax
    93 000000BB CD80                    int 0x80
